[package]
name = "rkub-client"
version = "0.1.0"
authors = ["Fisher Darling <fdarlingco@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
rkub-common = { path = "../rkub-common" }
serde_json = "*"
chrono = { version = "*", features = ["wasmbind"] }

wasm-bindgen = { version = "*", features = ["serde-serialize"] }
wasm-bindgen-futures = "*"
# wasm_svg_graphics = "1.0.2"
wasm_svg_graphics = { path = "../../WasmSVGGraphics" }

wasm-logger = "*"
log = "*"
lazy_static = "*"

rand = "*"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "*"
features = [
  'AddEventListenerOptions',
  'Attr',
  'Blob',
  'console',
  'Document',
  'DomTokenList',
  'DomRect',
  'Element',
  'EventTarget',
  'FileReader',
  'HtmlElement',
  'HtmlButtonElement',
  'HtmlInputElement',
  'HtmlCollection',
  'KeyboardEvent',
  'Location',
  'MessageEvent',
  'NamedNodeMap',
  'Node',
  'NodeList',
  'Performance',
  'PointerEvent',
  'ProgressEvent',
  'SvgElement',
  'SvgGraphicsElement',
  'SvgMatrix',
  'WebSocket',
  'Window',
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
